{
	"name": "@aashari/mcp-server-atlassian-bitbucket",
	"version": "1.42.0",
	"description": "Node.js/TypeScript MCP server for Atlassian Bitbucket. Enables AI systems (LLMs) to interact with workspaces, repositories, and pull requests via tools (list, get, comment, search). Connects AI directly to version control workflows through the standard MCP interface.",
	"main": "dist/index.js",
	"types": "dist/index.d.ts",
	"type": "commonjs",
	"repository": {
		"type": "git",
		"url": "https://github.com/aashari/mcp-server-atlassian-bitbucket.git"
	},
	"bin": {
		"mcp-atlassian-bitbucket": "./dist/index.js"
	},
	"scripts": {
		"build": "tsc",
		"prepare": "npm run build && node scripts/ensure-executable.js",
		"postinstall": "node scripts/ensure-executable.js",
		"test": "jest",
		"test:coverage": "jest --coverage",
		"test:cli": "jest src/cli/.*\\.cli\\.test\\.ts --runInBand --testTimeout=60000",
		"lint": "eslint src --ext .ts --config eslint.config.mjs",
		"format": "prettier --write 'src/**/*.ts' 'scripts/**/*.js'",
		"publish:npm": "npm publish",
		"update:check": "npx npm-check-updates",
		"update:deps": "npx npm-check-updates -u && npm install --legacy-peer-deps",
		"update:version": "node scripts/update-version.js",
		"mcp:stdio": "TRANSPORT_MODE=stdio npm run build && node dist/index.js",
		"mcp:http": "TRANSPORT_MODE=http npm run build && node dist/index.js",
		"mcp:inspect": "TRANSPORT_MODE=http npm run build && (node dist/index.js &) && sleep 2 && npx @modelcontextprotocol/inspector http://localhost:3000/mcp",
		"dev:stdio": "npm run build && npx @modelcontextprotocol/inspector -e TRANSPORT_MODE=stdio -e DEBUG=true node dist/index.js",
		"dev:http": "DEBUG=true TRANSPORT_MODE=http npm run build && node dist/index.js",
		"dev:server": "DEBUG=true npm run build && npx @modelcontextprotocol/inspector -e DEBUG=true node dist/index.js",
		"dev:cli": "DEBUG=true npm run build && DEBUG=true node dist/index.js",
		"start:server": "npm run build && npx @modelcontextprotocol/inspector node dist/index.js",
		"start:cli": "npm run build && node dist/index.js"
	},
	"keywords": [
		"mcp",
		"typescript",
		"claude",
		"anthropic",
		"ai",
		"atlassian",
		"bitbucket",
		"repository",
		"version-control",
		"pull-request",
		"server",
		"model-context-protocol",
		"tools",
		"resources",
		"tooling",
		"ai-integration",
		"mcp-server",
		"llm",
		"ai-connector",
		"external-tools",
		"cli",
		"mcp-inspector"
	],
	"author": "",
	"license": "ISC",
	"devDependencies": {
		"@eslint/js": "^9.30.0",
		"@semantic-release/changelog": "^6.0.3",
		"@semantic-release/exec": "^7.1.0",
		"@semantic-release/git": "^10.0.1",
		"@semantic-release/github": "^11.0.3",
		"@semantic-release/npm": "^12.0.1",
		"@types/cors": "^2.8.19",
		"@types/express": "^5.0.3",
		"@types/jest": "^30.0.0",
		"@types/node": "^24.0.3",
		"@types/turndown": "^5.0.5",
		"@typescript-eslint/eslint-plugin": "^8.35.0",
		"@typescript-eslint/parser": "^8.35.1",
		"eslint": "^9.30.0",
		"eslint-config-prettier": "^10.1.5",
		"eslint-plugin-filenames": "^1.3.2",
		"eslint-plugin-prettier": "^5.5.0",
		"jest": "^30.0.2",
		"nodemon": "^3.1.10",
		"npm-check-updates": "^18.0.1",
		"prettier": "^3.6.2",
		"semantic-release": "^24.2.5",
		"ts-jest": "^29.4.0",
		"ts-node": "^10.9.2",
		"typescript": "^5.8.3",
		"typescript-eslint": "^8.35.0"
	},
	"publishConfig": {
		"registry": "https://registry.npmjs.org/",
		"access": "public"
	},
	"dependencies": {
		"@modelcontextprotocol/sdk": "^1.13.0",
		"commander": "^14.0.0",
		"cors": "^2.8.5",
		"dotenv": "^17.0.0",
		"express": "^5.1.0",
		"turndown": "^7.2.0",
		"zod": "^4.0.10"
	},
	"directories": {
		"example": "examples"
	},
	"jest": {
		"preset": "ts-jest",
		"testEnvironment": "node",
		"testMatch": [
			"**/src/**/*.test.ts"
		],
		"collectCoverageFrom": [
			"src/**/*.ts",
			"!src/**/*.test.ts",
			"!src/**/*.spec.ts"
		],
		"coveragePathIgnorePatterns": [
			"/node_modules/",
			"/dist/",
			"/coverage/"
		],
		"coverageReporters": [
			"text",
			"lcov",
			"json-summary"
		],
		"transform": {
			"^.+\\.tsx?$": [
				"ts-jest",
				{
					"useESM": true
				}
			]
		},
		"moduleNameMapper": {
			"(.*)\\.(js|jsx)$": "$1"
		},
		"extensionsToTreatAsEsm": [
			".ts"
		],
		"moduleFileExtensions": [
			"ts",
			"tsx",
			"js",
			"jsx",
			"json",
			"node"
		]
	}
}
